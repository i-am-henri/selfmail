// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id
  sessions  Session[]
  email     String      @unique // the email which the user has
  name      String      @unique // works like a handle (e.g: @john, @jane, @john.doe, etc)
  bio       String?
  image     String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  emailSend EmailSend[]
  emails    Email[] // the emails which the user received
  contacts  Contact[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

// The emails, which the user send
model EmailSend {
  id        String   @id @unique @default(cuid())
  userId    String
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Label {
  id          String   @id @unique @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Email {
  id        String   @id @unique @default(cuid())
  content   String
  sender    String
  subject   String
  recipient String
  createdAt DateTime @default(now())
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  userId    String
}

// TODO: add references to the emails which are made by this contact, and the user received
model Contact {
  id          String   @id @unique @default(cuid())
  name        String
  email       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}
